# kernel version etc. variables
source /grubvars.cfg

if test -n "$ser_cons";then
echo -n "Press Esc to skip serial port setup..."
if sleep --verbose --interruptible 5;then
  if serial --unit=$ser_cons --speed=9600 --word=8 --parity=no --stop=1;then
    echo "serial initialized, adding to terminal"
    set serial="console=tty0 console=ttyS$ser_cons"
    terminal_output --append serial
    terminal_input --append serial
  else
    echo "failed to initialize serial line"
    set serial=""
  fi
fi
fi

set timeout=5

if test -z "$root_dev";then
  if test -n "$root_uuid";then
    set root_dev="UUID=$root_uuid"
  elif test -n "$root_label";then
    set root_dev="LABEL=$root_label"
  fi
fi

if keystatus --shift; then no_storage_scan=1 ; fi
if keystatus --ctrl; then no_root_scan=1 ; fi

if test -z "$root_dev" -a -z "$no_root_scan";then
  echo -n "Scanning for root uuid.. (hold down CTRL during boot to skip)"
  probe -s root_uuid -u ($root)
  set root_dev="UUID=$root_uuid"
  echo " root uuid: $root_uuid"
fi

function setup_gfx {
  insmod font
  loadfont "$1"
  insmod vbe
  insmod efi_gop
  insmod efi_uga
  insmod gfxterm
  set gfxmode="800x600x16"
  if terminal_output gfxterm;then
    if test -e /$dist/logo.png;then
      insmod png
      background_image -m stretch /$dist/logo.png
    elif test -e /logo.png;then
      insmod png
      background_image -m stretch /logo.png
    fi
  fi
}

function set_load_vars {
  if test -z "$kernel";then set kernel="/$dist/$arch/vmlinuz-$kver";fi
  if test -z "$initrd";then set initrd="/$dist/$arch/ramdisk-$kver";fi
  if test -z "$storage_dev";then set storage_dev="mem";fi
  if test -z "$main_sfs"; then set main_sfs="*.sfs";fi
}

function load_lnx {
  set_load_vars
  echo -n "Loading $kernel.."
  linux $kernel root=$root_dev:$dist/$main_sfs+:$dist/\$arch/*-\$kver.sfs$extra_sfs+$storage_dev max_loop=64 $append $serial "$@"
  echo -n "$initrd.."
  initrd $initrd
  echo "ok."
}

function cfg_extra_sfs {
  set extra_sfs=""
  for extra in $extras;do
    extra_sfs="$extra_sfs+:$dist/$extra/*.sfs"
  done
}

if test -e /boot/grub/fonts/unicode.pf2;then
  setup_gfx /boot/grub/fonts/unicode.pf2
elif test -e /boot/grub/ascii.pf2;then
  setup_gfx /boot/grub/ascii.pf2
fi

if test -n "$extras";then
  cfg_extra_sfs
fi

if test -n "$storage_uuid";then
menuentry "Linux $arch $kver [Storage: $storage_uuid, Boot: $root_dev ]" {
  set storage_dev="UUID=$storage_uuid"
  load_lnx quiet
}
fi

menuentry "Linux $kver $arch [Boot: $root_dev ]" {
  set storage_dev="mem"
  load_lnx quiet
}

if test -z "$no_storage_scan";then
  if test -z "$storage_uuid";then
    echo -n "Scanning for LABEL=Storage.. (hold down SHIFT during boot to skip)"
    search -l Storage -s storage
    if test -n "$storage";then
      probe -s storage_uuid -u ($storage)
menuentry "Linux $arch $kver [Auto-Storage: $storage_uuid, Boot: $root_dev ]" {
  set storage_dev="UUID=$storage_uuid"
  load_lnx quiet
}
    else
      echo "not found."
    fi
  fi
fi

if test -n "$extra_sfs";then
menuentry "Linux $kver $arch [no extras, Boot: $root_dev ]" {
  set storage_dev="mem"
  set extra_sfs=""
  load_lnx quiet
}
fi

menuentry "Linux $kver $arch [copy-to-mem, no extras, Boot: $root_dev]" {
  set storage_dev="mem"
  set root_dev="mem:$root_dev"
  set extra_sfs=""
  load_lnx quiet
}

if test -e /grub-extra.cfg;then
  source /grub-extra.cfg
fi
